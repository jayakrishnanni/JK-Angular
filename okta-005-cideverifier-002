// Generates a code verifier for PKCE
private generateCodeVerifier(): string {
  const array = new Uint8Array(32);
  window.crypto.getRandomValues(array);
  return this.base64UrlEncode(array);
}

// Generates a code challenge for PKCE
private async generateCodeChallenge(codeVerifier: string): Promise<string> {
  const encoder = new TextEncoder();
  const data = encoder.encode(codeVerifier);
  const hash = await crypto.subtle.digest('SHA-256', data);
  return this.base64UrlEncode(new Uint8Array(hash));
}

// Helper method to encode Uint8Array to a Base64-URL encoded string
private base64UrlEncode(buffer: Uint8Array): string {
  const base64String = btoa(String.fromCharCode(...buffer));
  return base64String.replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
}