function base64UrlDecode(str: string): string {
  return decodeURIComponent(
    atob(str.replace(/-/g, '+').replace(/_/g, '/'))
      .split('')
      .map(function (c) {
        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
      })
      .join('')
  );
}

function parseJwt(token: string): any {
  try {
    const base64Url = token.split('.')[1];
    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
    return JSON.parse(base64UrlDecode(base64));
  } catch (error) {
    console.error('Invalid JWT token', error);
    return null;
  }
}

const token = 'your-access-token-here';
const decodedToken = parseJwt(token);

console.log(decodedToken);